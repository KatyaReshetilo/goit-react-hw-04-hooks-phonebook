{"version":3,"sources":["components/filter/filter.module.css","components/form/form.module.css","components/section/section.js","components/form/form.js","components/contacts/contacts.js","components/filter/filter.js","App.js","index.js","components/section/section.module.css","components/contacts/contacts.module.css"],"names":["module","exports","Section","title","children","className","s","section","head","Form","onSubmit","useState","name","setName","number","setNumber","handelChange","event","currentTarget","value","form","e","preventDefault","labelForm","inputForm","type","pattern","required","onChange","buttonForm","Contacts","contacts","onDeleteContact","map","id","contactItem","delete","onClick","propTypec","PropTypes","array","func","Filter","headFilter","inputFilter","App","setContact","filter","setFilter","useEffect","window","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","newContact","uuidv4","addContact","contact","includes","alert","normalize","toLocaleLowerCase","getVisibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.644a2782.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headFilter\":\"filter_headFilter__33DTo\",\"inputFilter\":\"filter_inputFilter__3iB2p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__3mlCr\",\"labelForm\":\"form_labelForm__kN1-j\",\"inputForm\":\"form_inputForm__2mbJ6\",\"buttonForm\":\"form_buttonForm__TD1uu\"};","import PropTypes from 'prop-types';\nimport s from './section.module.css';\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.head}>{title}</h2>\n      {children}\n    </section>\n  );\n}\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","import React, { useState } from 'react';\nimport s from './form.module.css';\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handelChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={formSubmit}>\n      <label className={s.labelForm}>\n        Name\n        <input\n          className={s.inputForm}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handelChange}\n        />\n      </label>\n      <label className={s.labelForm}>\n        Number\n        <input\n          className={s.inputForm}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handelChange}\n        />\n      </label>\n      <button className={s.buttonForm} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport s from './contacts.module.css';\nexport default function Contacts({ contacts, onDeleteContact }) {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li key={id} id={id} className={s.contactItem}>\n            {name}: {number}\n            <button\n              className={s.delete}\n              type=\"button\"\n              onClick={() => {\n                onDeleteContact(id);\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\nContacts.propTypec = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './filter.module.css';\nexport default function Filter({ value, onChange }) {\n  return (\n    <label>\n      <h3 className={s.headFilter}>Find contacts by name</h3>\n      <input\n        className={s.inputFilter}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Section from './components/section/section';\nimport Form from './components/form/form';\nimport Contacts from './components/contacts/contacts';\nimport Filter from './components/filter/filter';\n\nexport default function App() {\n  const [contacts, setContact] = useState([]);\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    const contacts = window.localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      setContact(s => (s = parsedContacts));\n    }\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = ({ name, number }) => {\n    return {\n      id: uuidv4(),\n      name,\n      number,\n    };\n  };\n\n  const handlerOnSubmit = ({ name, number }) => {\n    const newContact = addContact({ name, number });\n    const contactsNames = contacts.map(contact => contact.name);\n    if (contactsNames.includes(name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      setContact(s => [newContact, ...s]);\n    }\n  };\n\n  const deleteContact = id => {\n    setContact(s => s.filter(contact => contact.id !== id));\n  };\n\n  const doFilter = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalize = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalize),\n    );\n  };\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Form onSubmit={handlerOnSubmit} />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter value={filter} onChange={doFilter} />\n        <Contacts\n          contacts={getVisibleContacts()}\n          onDeleteContact={deleteContact}\n        />\n      </Section>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"section_head__21w0M\",\"section\":\"section_section__2XPQS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"contacts_contactItem__wTfg3\",\"delete\":\"contacts_delete__1I5_E\"};"],"sourceRoot":""}